#!/bin/sh

source ../routines 

mkdir qm

if  [ "$1" == "" ] || [ "$1" == "--prepare" ]; then

	CHECK $BIN_BABEL -i xyz ligand.xyz -o gjf qm/mol.tmp

	linenum=`wc -l qm/mol.tmp | awk '{print $1}'`

	echo "%mem=${MEMORY}GB" > qm/mol-opt.gjf
	echo "%nprocshared=${NCORES}" >> qm/mol-opt.gjf
	echo "#HF/6-31G* nosymm" >> qm/mol-opt.gjf
	echo "" >> qm/mol-opt.gjf
	echo "Mol " >> qm/mol-opt.gjf
	echo " " >> qm/mol-opt.gjf
	echo "$NetCharge $Multiplicity" >> qm/mol-opt.gjf
	leftline=`expr $linenum - 5`
	tail -n $leftline qm/mol.tmp >> qm/mol-opt.gjf
fi

if [ "$1" == "" ]; then
	$BIN_RUN_QM_JOBS
fi

if [ "$1" == "" ] || [ "$1" == "--complete" ]; then
	# cheat here -- out g09_wrapper faked-up g09 log files
	# doesn't convince openbabel, so use the intermediate
	# .xyz file that we know it makes
	if [ -e qm/mol-opt.gjf.psi4in.xyz ]; then 
		cp qm/mol-opt.gjf.psi4in.xyz mol-opt.xyz
	else
		CHECK $BIN_BABEL -i g09 qm/mol-opt.out -o xyz mol-opt.xyz
	fi
	if [ ! -s mol-opt.xyz ]; then
		# remove it if it's zero length
		rm -f mol-opt.xyz
	fi
fi

exit 0

