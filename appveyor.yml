environment:
  BINSTAR_TOKEN:
    secure: +OdcMIEXLN/JkgaD3TxxMkfzQIAnPcnXSEg0mLcPIz7DADvjh20/dqLafoRNoaeA
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\continuous-integration\\appveyor\\run_with_env.cmd"
    PYTHONHASHSEED: "0"

  matrix:
    - PYTHON: "C:\\Python36_32"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"
      CONDA_PY: "36"

    - PYTHON: "C:\\Python36_64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      CONDA_PY: "36"

install:
  - powershell .\\continuous-integration\\appveyor\\install.ps1  # installing miniconda for windows
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  - conda config --set always_yes true
  - conda install conda conda-build anaconda anaconda-client requests jinja2 -y -q # this has to go into the root environment

  ### Creating an environment to install htmd deps and build
  - conda create -q -n travis-env python=%PYTHON_VERSION%
  - activate travis-env
  - conda config --add channels acellera
  - conda install anaconda-client -y -q
  - conda update --all -y -q
  # installing all deps
  - conda install --file package/htmd-deps/DEPENDENCIES -y
  - conda remove htmd -y
  - python package/htmd-deps/write_meta_yaml.py package/htmd-deps

build: false # Not a C# project, build stuff at the test step instead.

test_script:
  # run testsuite and upload test results to AppVeyor; return exit code of testsuite
  - conda build --python %PYTHON_VERSION% package/htmd-deps --no-include-recipe
  - conda build package/htmd-data --no-include-recipe
  - conda build --python %PYTHON_VERSION% package/htmd --no-include-recipe

  # Deactivate htmd environment to continue with moving and pushing
  - deactivate travis-env
  - python continuous-integration\move-conda-package.py conda-recipe

artifacts:
  # Archive the generated conda package in the ci.appveyor.com build report.
  - path: '*.tar.bz2'

on_success:
  # Upload built binaries to binstar.org. The globbing and handling of the
  # exit-status code is tricky in cmd.exe or powershell, so we're just using
  # a python script.
  - python continuous-integration\binstar-push.py