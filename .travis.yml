#branches: 
# only:
#  - master
#  - toni-devel 

# Note on releases -- HTMD releases are now only made when a tag is pushed
 
matrix:
  include:
   - os: linux
     language: generic
     env: TRAVIS_PYTHON_VERSION=3.5 CROSS_COMPILE=1 CPURE=gcc CC=x86_64-w64-mingw32-g++ FC=x86_64-w64-mingw32-gfortran OSNAME=Linux
     addons:
      apt:
       packages:
       - gfortran-mingw-w64-x86-64
       - gcc-mingw-w64-x86-64
       - g++-mingw-w64-x86-64
       - binutils-mingw-w64-x86-64
       - mingw-w64-dev
#   - os: linux
#     language: generic
#     env: TRAVIS_PYTHON_VERSION=3.4 CPURE=gcc CC=g++ FC=gfortran STATIC="-static" OSNAME=Linux
#     addons:
#      apt:
#       packages:
#       - gfortran
   - os: linux
     language: generic
     env: TRAVIS_PYTHON_VERSION=3.5 CPURE=gcc CC=g++ FC=gfortran STATIC="-static" OSNAME=Linux
     addons:
      apt:
       packages:
       - gfortran
#   - os: osx
#     language: generic
#     env: TRAVIS_PYTHON_VERSION=3.4 CPURE=gcc CC=g++ FC=gfortran OSNAME=Darwin
   - os: osx
     os_image: xcode6.4
     language: generic
     env: TRAVIS_PYTHON_VERSION=3.5 CPURE=gcc CC=g++ FC=gfortran OSNAME=Darwin

install:
 - printenv
 - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
 - if [ "$TRAVIS_OS_NAME" == "osx" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
 - if [ "$TRAVIS_OS_NAME" == "windows" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-Windows-x86_64.sh -O miniconda.sh; fi

 - if [ "$TRAVIS_BRANCH" == "pro" ]; then export PACKAGE_NAME=htmd-pro; export TYPE=pro; else export PACKAGE_NAME=htmd; export TYPE=basic; fi
 - echo $PACKAGE_NAME

 - bash miniconda.sh -b -p $HOME/miniconda
 - export PATH="$HOME/miniconda/bin:$PATH"
 - hash -r
 - conda config --set always_yes yes 
 - conda update --all -y
 - conda config --add channels omnia
 - conda config --add channels acellera
 - conda install conda-build=1.21.14 -y

 - conda create -q -n travis-env python=$TRAVIS_PYTHON_VERSION 
 - source activate travis-env
 - pwd
 - ls -la
 - if [ "$TRAVIS_BRANCH" == "$TRAVIS_TAG" ]; then export BUILD_VERSION=$TRAVIS_TAG; else export BUILD_VERSION=0.0.0; fi
 - echo "TRAVIS_BRANCH = $TRAVIS_BRANCH"
 - echo "TRAVIS_TAG    = $TRAVIS_TAG"
 # Always set it to 0 so we don't get a new release at every successful commit
 - echo "BUILD_VERSION = $BUILD_VERSION"

 - export BUILD_NUMBER=0

 - conda build --python $TRAVIS_PYTHON_VERSION package/htmd-data
 - conda build --python $TRAVIS_PYTHON_VERSION package/htmd

 # To bring in dependencies 
 - conda install qt pyqt -y
 - conda install openbabel -y
 - conda install pyemma -y
 - conda install natsort -y
 - conda install ipython -y
 - conda install requests -y
 - conda install joblib -y
 - conda install scikit-learn -y
 - conda install jupyter_console -y
 - conda install notebook -y
 - conda install ipyparallel -y
 - conda install psfgen -y
 - conda install vina -y
 - conda install nglview -y
 - conda install propka -y
 - conda install anaconda-client -y
 - conda install pint -y
 - conda install htmd-pdb2pqr -y
 - conda install psi4 -y
 - conda install acemd -y
 - conda install match -y
 - conda install ambermini=15.0.4 -y

 - conda install $HOME/miniconda/conda-bld/*-64/htmd-data-[0-9]*.tar.bz2  -y
 - conda install $HOME/miniconda/conda-bld/*-64/$PACKAGE_NAME-[0-9]*.tar.bz2  -y

script:
 # Run the inline file tests 
# - echo "HTMD TEST BEGIN"
#
# - pwd
# - echo $PYTHON_PATH
# - conda env list
# - find $HOME -name g09_wrapper
 - which babel
 - python -c "import htmd"
 - activate_license "$LICENSE_TOKEN"
 - python tests/run_inline_file_tests.py
 - tests/run_other_tests.sh

after_success:
 - if [ "$TRAVIS_REPO_SLUG" == "Acellera/htmd" ] && [ "$TRAVIS_BRANCH" == "$TRAVIS_TAG" ]; then bash .travis_conda_upload_data.sh ; fi
 - if [ "$TRAVIS_REPO_SLUG" == "Acellera/htmd" ] && [  "$TRAVIS_BRANCH" == "$TRAVIS_TAG" ]; then bash .travis_conda_upload.sh ; fi
 - if [ "$TRAVIS_REPO_SLUG" == "Acellera/htmd" ] && [  "$TRAVIS_BRANCH" == "$TRAVIS_TAG" ]; then package/htmd-meta/generate-meta-packages.sh; fi
