# Note on releases -- HTMD releases are now only made when a tag is pushed

# Set MAKENOARCH=1 to the one combination which will make and release noarch packages. It's used in conda upload.

matrix:
  include:
    - os: linux
      language: generic
      env: TRAVIS_PYTHON_VERSION=3.6 OSNAME=Linux
    - os: linux
      language: generic
      env: TRAVIS_PYTHON_VERSION=3.5 OSNAME=Linux
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION=3.6 OSNAME=Darwin
      before_install:
        - brew update
        - brew install gcc


install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; fi

  - echo $PACKAGE_NAME

  # Set up the Conda environment

  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes
  - conda install conda conda-build anaconda anaconda-client requests pytest -y -q # this has to go into the root environment
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then conda install gcc_linux-64 gxx_linux-64 -y -q; fi
  - conda create -q -n travis-env python=$TRAVIS_PYTHON_VERSION
  - source activate travis-env

  - conda config --add channels acellera
  - conda config --add channels psi4
  - conda install anaconda-client -y -q
  - conda update --all -y -q

  - if [ "$TRAVIS_BRANCH" == "$TRAVIS_TAG" ]; then export BUILD_VERSION=$TRAVIS_TAG; else export BUILD_VERSION=0.0.0; fi
  - echo "TRAVIS_BRANCH = $TRAVIS_BRANCH"
  - echo "TRAVIS_TAG    = $TRAVIS_TAG"
  - echo "TRAVIS_PULL_REQUEST = $TRAVIS_PULL_REQUEST"
  - echo "TRAVIS_REPO_SLUG = $TRAVIS_REPO_SLUG"
  - echo "BUILD_VERSION = $BUILD_VERSION"
  # Always set it to 0 so we don't get a new release at every successful commit
  - export BUILD_NUMBER=0

  # Install the Conda dependencies HTMD needs
  - conda install --file package/htmd-deps/DEPENDENCIES -y
  - python package/htmd-deps/write_meta_yaml.py package/htmd-deps

  # If not PR, clone the private htmdlib repo,
  - if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then bash -x ./continuous-integration/travis/compile_htmdlib.sh ; fi

  - conda build --python $TRAVIS_PYTHON_VERSION package/htmd-deps --no-include-recipe
  - conda build package/htmd-data --no-include-recipe
  - conda build --python $TRAVIS_PYTHON_VERSION package/htmd --no-include-recipe

  - conda install $HOME/miniconda/conda-bld/*-64/htmd-deps-[0-9]*.tar.bz2  -y -q
  - conda install $HOME/miniconda/conda-bld/*/htmd-data-[0-9]*.tar.bz2  -y -q
  - conda install $HOME/miniconda/conda-bld/*-64/htmd-[0-9]*.tar.bz2  -y -q

script:
  - export HTMD_NONINTERACTIVE=1
  - python htmd/tests/run_inline_file_tests.py
  - htmd/tests/run_other_tests.sh

after_success:
  # If not PR, on Acellera/htmd and tagged build, do anaconda upload tasks
  - if [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_REPO_SLUG" == "Acellera/htmd" ] && [ "$TRAVIS_BRANCH" == "$TRAVIS_TAG" ]; then bash -x ./continuous-integration/travis/conda_upload.sh; bash -x ./continuous-integration/travis/conda_build_upload_meta.sh ; fi

