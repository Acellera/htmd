# Note on releases -- HTMD releases are now only made when a tag is pushed
 
matrix:
  include:
   - os: linux
     language: generic
     env: TRAVIS_PYTHON_VERSION=3.5 OSNAME=Windows
     addons:
      apt:
       packages:
       - gfortran-mingw-w64-x86-64
       - gcc-mingw-w64-x86-64
       - g++-mingw-w64-x86-64
       - binutils-mingw-w64-x86-64
       - mingw-w64-dev
   - os: linux
     language: generic
     env: TRAVIS_PYTHON_VERSION=3.5  OSNAME=Linux
     addons:
      apt:
       packages:
       - gfortran
   - os: osx
     language: generic
     env: TRAVIS_PYTHON_VERSION=3.5 OSNAME=Darwin
     before_install:
      - brew install gcc

install:
 - printenv
 - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
 - if [ "$TRAVIS_OS_NAME" == "osx" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
 - if [ "$TRAVIS_OS_NAME" == "windows" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi

 - echo $PACKAGE_NAME

# Set up the Conda environment

 - bash miniconda.sh -b -p $HOME/miniconda
 - export PATH="$HOME/miniconda/bin:$PATH"
 - hash -r
 - conda config --set always_yes yes 
 - conda update --all -y -q

# - conda create -q -n travis-env python=$TRAVIS_PYTHON_VERSION 
# - source activate travis-env

 - conda update --all -y -q
 - conda install anaconda requests conda-build -y -q
 - conda config --add channels acellera


 - if [ "$TRAVIS_BRANCH" == "$TRAVIS_TAG" ]; then export BUILD_VERSION=$TRAVIS_TAG; else export BUILD_VERSION=0.0.0; fi
 - echo "TRAVIS_BRANCH = $TRAVIS_BRANCH"
 - echo "TRAVIS_TAG    = $TRAVIS_TAG"
 - echo "BUILD_VERSION = $BUILD_VERSION"
 # Always set it to 0 so we don't get a new release at every successful commit
 - export BUILD_NUMBER=0


 # Update acellera channel with any updates of the omnia packages that we track
 - python ./sync_conda_with_omnia.py
 # Install the Conda dependencies HTMD needs
 - package/htmd-deps/INSTALL_DEPENDENCIES.sh

 # Clone the private htmdlib repo
 - git clone https://$GITHUB_HTMDLIB_USERNAME:$GITHUB_HTMDLIB_PASSWORD@github.com/Acellera/htmdlib --depth 1

 - conda build --python $TRAVIS_PYTHON_VERSION package/htmd-deps --no-include-recipe
 - conda build --python $TRAVIS_PYTHON_VERSION package/htmd-data --no-include-recipe
 - conda build --python $TRAVIS_PYTHON_VERSION package/htmd --no-include-recipe


 - conda install $HOME/miniconda/conda-bld/*-64/htmd-deps-[0-9]*.tar.bz2  -y -q
 - conda install $HOME/miniconda/conda-bld/*/htmd-data-[0-9]*.tar.bz2  -y -q
 - conda install $HOME/miniconda/conda-bld/*-64/htmd-[0-9]*.tar.bz2  -y -q
 - echo "=== MD5s of installed DSOs ==="
 - md5sum $HOME/miniconda/lib/*/site-packages/htmd/lib/$OSNAME/*.so

script:
 - if [ "$OSNAME" != "Windows" ]; then activate_license "$LICENSE_TOKEN"; fi
 - if [ "$OSNAME" != "Windows" ]; then  python tests/run_inline_file_tests.py; fi
 - if [ "$OSNAME" != "Windows" ]; then  tests/run_other_tests.sh; fi

after_success:
 - if [ "$TRAVIS_REPO_SLUG" == "Acellera/htmd" ] && [ "$TRAVIS_BRANCH" == "$TRAVIS_TAG" ]; then ./.travis_conda_upload.sh; ./.travis_conda_build_upload_meta.sh ; fi
